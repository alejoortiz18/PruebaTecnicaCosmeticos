//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiBelleza.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SalaBellezaEntities : DbContext
    {
        public SalaBellezaEntities()
            : base("name=SalaBellezaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ClientesE> Clientes { get; set; }
        public virtual DbSet<Colores> Colores { get; set; }
        public virtual DbSet<FacturasE> Facturas { get; set; }
        public virtual DbSet<PlanSepareE> PlanSepare { get; set; }
        public virtual DbSet<ProductosE> Productos { get; set; }
        public virtual DbSet<ProductoXColorE> ProductoXColor { get; set; }
        public virtual DbSet<PromocionesE> Promociones { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<DetalleFacturaE> DetalleFactura { get; set; }
        public virtual DbSet<DetallePlanSepareXProductoE> DetallePlanSepareXProducto { get; set; }
    
        public virtual ObjectResult<Nullable<int>> InsertarCliente(string nombre, Nullable<int> cedula)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertarCliente", nombreParameter, cedulaParameter);
        }
    
        public virtual ObjectResult<SeleccionarPlanSepare_Result> SeleccionarPlanSepare(Nullable<int> cedula)
        {
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeleccionarPlanSepare_Result>("SeleccionarPlanSepare", cedulaParameter);
        }
    }
}
